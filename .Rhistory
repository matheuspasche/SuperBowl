Nucleotides <- function(dna) {
old <- "GCTA"
new <- "CGAU"
translate <- chartr(
old = old,
new = new,
x = dna
)
return(translate)
}
nucleotides <- function(dna) {
old <- "GCTA"
new <- "CGAU"
translate <- chartr(
old = old,
new = new,
x = dna
)
return(translate)
}
nucleotides("CGCTCA")
library(testthat)
install.packages('testthat')
library(testthat)
test_that("Can you translate it, honey?", {
expect_equal(nucleotides("GACATGG"), "CTGUACC")
expect_equal(nucleotides("AAATTT"), "UUUAAA")
})
(nucleotides("GACATGG")
)
expect_equal(nucleotides("GACATGG"), "CUGUACC")
nucleotides <- function(dna) {
if(!is.character(dna)){
stop("Please insert character nucleotides, such as ACGT")
}
old <- "GCTA"
new <- "CGAU"
translate <- chartr(
old = old,
new = new,
x = dna
)
return(translate)
}
test_that("Can you translate it, honey?", {
expect_equal(nucleotides("GACATGG"), "CUGUACC")
expect_equal(nucleotides("AAATTT"), "UUUAAA")
expect_error(nucleotides(1234))
})
test_that("Google, translate dna", {
expect_equal(nucleotides("GACATGG"), "CUGUACC")
expect_equal(nucleotides("AAATTT"), "UUUAAA")
expect_error(nucleotides(1234))
})
nucleotides(1234)
nucleotides <- function(dna) {
if(!is.character(dna)){
stop("Please insert character nucleotides, such as ACGT")
}
old <- "GCTA"
new <- "CGAU"
translate <- chartr(
old = old,
new = new,
x = dna
)
return(translate)
}
?nucleotides
flights <- nycflights13::flights
View(flights)
flights <- nycflights13::flights %>%
mutate(yearmon = ym(paste0(year, month)))
library(dplyr)
library(nycflights13)
library(lubridate)
flights <- nycflights13::flights %>%
mutate(yearmon = ym(paste0(year, month)))
library(tidyverse)
library(nycflights13)
library(lubridate)
flights <- nycflights13::flights %>%
mutate(yearmon = ym(paste0(year, month)))
flights <- nycflights13::flights %>%
mutate(yearmon = ym(paste0(year, month)),
status = case_when(total_delay > 0 ~ 'delay',
total_delay <0~ 'early',
total_delay ==0 ~'in time')
)
flights <- nycflights13::flights %>%
mutate(yearmon = ym(paste0(year, month)),
total_delay = arr_delay + dep_delay,
status = case_when(total_delay > 0 ~ 'delay',
total_delay <0~ 'early',
total_delay ==0 ~'in time')
)
flights %>%
with_groups(c(yearmon, status), ~summarise(.,Count = n())) %>%
ggplot(aes(x = yearmon, y = Count, col = status))+
geom_line()
flights %>%
with_groups(c(yearmon, status), ~summarise(.,Count = n())) %>%
filter(!is.na(status)) %>%
ggplot(aes(x = yearmon, y = Count, col = status))+
geom_line()
flights %>%
with_groups(c(yearmon, status), ~summarise(.,Count = n())) %>%
filter(!is.na(status)) %>%
ggplot(aes(x = yearmon, y = Count, col = status))+
geom_line()+
pilot::theme_pilot()
flights %>%
with_groups(c(yearmon), ~summarise(.,Count = n())) %>%
filter(!is.na(status)) %>%
ggplot(aes(x = yearmon, y = Count))+
geom_line()+
pilot::theme_pilot()
flights %>%
with_groups(c(yearmon), ~summarise(.,Count = n())) %>%
filter(!is.na(status)) %>%
ggplot(aes(x = yearmon, y = Count))+
geom_line()
flights <- nycflights13::flights %>%
mutate(yearmon = ym(paste0(year, month)),
total_delay = arr_delay + dep_delay,
status = case_when(total_delay > 0 ~ 'delay',
total_delay <0~ 'early',
total_delay ==0 ~'in time')
)
flights %>%
with_groups(c(yearmon), ~summarise(.,Count = n())) %>%
filter(!is.na(status)) %>%
ggplot(aes(x = yearmon, y = Count))+
geom_line()
flights %>%
with_groups(c(yearmon), ~summarise(.,Count = n())) %>%
filter(!is.na(status))
flights %>%
filter(!is.na(status)) %>%
with_groups(c(yearmon), ~summarise(.,Count = n())) %>%
ggplot(aes(x = yearmon, y = Count))+
geom_line()+
pilot::theme_pilot()
flights %>%
filter(!is.na(status)) %>%
view()
flights %>% count(month)
